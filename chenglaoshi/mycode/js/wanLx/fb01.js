/**
 * 斐波那契数列
 *  已知条件
 *  1、第一项，第二项都为1
 *  2、从第三项开始，每一项是前两项的和
 *  3、用函数实现求第N项
 * 分析
 *  1、函数形参为N
 *  2、函数最少有两个变量a1,a2均等于1
 *      
 *  思路
 *  1、将a1,a2看出前两项，将项数与移动a1,a2整体移动次数的时候，
 * 发现a1的值是未移动a2的值，现a2的值是未移动a1+a2
 * 即存在变量交换
 *  即 三个变量
 *  移动问题转换成循环次数问题
 * 
 *  
 */

 function fbn(N){
     var a1=1,a2=1,a3;
     for(var i=3;i<=N;i++){
         a3=a1;
         a1=a2;
         a2=a3+a1; 
     }
     return a2;  
 }

 console.log(fbn(6));


 /**
  * 使用递归来 实现斐波那契数列
  * 递归的思路
  *     1、设置函数的出口
  *     2、函数的形参是数列的项数N
  *     3、函数返回值 找问题要求
  */

  function dgFBe(N){
      //设置函数的出口，
      if(N===1||N===2){
          return 1;
      }
      return dgFBe(N-1)+dgFBe(N-2);
  }
console.log(dgFBe(6));